{"version":3,"sources":["Menu.js","Content.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","updateDossier","bind","state","window","menu","this","setState","console","log","dossier","items","currentChapterIndex","children","forEach","value","index","push","c","current","className","id","React","Component","Chapter","handleClick","expended","preState","p","currentPageIndex","onClick","name","Page","gotoPage","event","navigateToPage","then","data","stopPropagation","Content","App","pageName","container","document","getElementById","updateTitle","_","currCh","microstrategy","create","url","enableResponsive","containerHeight","placeholder","registerEventHandler","EventType","ON_PAGE_SWITCHED","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db66a247.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.updateDossier = this.updateDossier.bind(this);\n        this.state = {\n        };\n        window.menu = this\n      }    \n\n    componentDidMount() {\n    }\n    updateDossier() {\n        this.setState( ()=> {\n            \n            console.log(\"Update Menu\")\n            return {\n                dossier: window.dossier\n            }\n        })\n    }\n\n    render() {\n\n        const items = []\n\n        if (this.state.dossier) {\n            const currentChapterIndex = this.state.dossier.currentChapterIndex;\n            this.state.dossier.children.forEach((value, index) => {\n                items.push(<Chapter c={value} key={index} current={index===currentChapterIndex}></Chapter>)\n            })\n        } else {\n            items.push(<div key=\"1\">Loading...</div>)\n        }\n\n        return (\n            <div className=\"menu-container\" id=\"menu-container\">\n                {items}\n            </div>    \n        );\n    }\n}\n\nclass Chapter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this)\n        this.state = {\n            expended: true\n        }\n    }   \n\n    handleClick() {\n        \n        this.setState((preState) => {\n            return {\n                expended: !preState.expended\n            }\n        })\n    }\n\n    render() {\n\n        const items = []\n        this.props.c.children.forEach((value, index) => {\n            if (this.props.current) {\n                items.push(<Page p={value} key={index} current={this.props.c.currentPageIndex===index}></Page>)\n\n            } else {\n                items.push(<Page p={value} key={index} current={false}></Page>)\n            }\n        })\n\n        const className = \"Chapter\"\n\n        if (this.state.expended) {\n            return (\n            <div onClick={this.handleClick}>\n                <div className={className}>{this.props.c.name}<span className=\"ChapterArrow\">⬆</span></div>\n                <div className=\"ChapterUL\">\n                    {items}\n                </div>\n            </div>  \n            )\n        } else {\n            return (\n                <div onClick={this.handleClick}>\n                    <div className={className}>{this.props.c.name}<span className=\"ChapterArrow\">⬇</span></div>\n                </div>\n            )\n        }\n    }\n}\n\nclass Page extends Component{\n\n    constructor(props) {\n        super(props)\n        this.gotoPage = this.gotoPage.bind(this)\n\n    }  \n\n    gotoPage(event) {\n       \n        window.dossier.navigateToPage(this.props.p).then((data)=> {\n             window.menu.updateDossier()\n        })\n        event.stopPropagation()\n\n    }\n    render() {\n        const className = this.props.current ? \"Page Current\": \"Page\"\n        return (\n            \n                <div className={className} onClick={this.gotoPage}>{this.props.p.name}</div>\n            \n        )\n    }   \n}\n\nexport default Menu;\n","// import './App.css'\nimport React, { Component } from 'react';\n\nclass Content extends Component {\n\n\n    render() {\n\n        return (\n            <div className=\"content-container\" id=\"content-container\">\n            \n            </div>\n        )\n    }\n}\n\nexport default Content","// import logo from './logo.svg';\n// import './App.css';\nimport Menu from \"./Menu\"\nimport Content from \"./Content\"\nimport React, { Component } from 'react'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      pageName: \"MicroStrategy Embedding SDK Example - Page Navigation\"\n    }\n  }\n\n  componentDidMount() {\n             \n    const container = document.getElementById(\"content-container\")\n\n    let updateTitle = (data) => {\n      console.log(\"Update Title\")\n      this.setState((_) => {\n        const currCh = window.dossier.children[window.dossier.currentChapterIndex]\n        const currPage = currCh.children[currCh.currentPageIndex]\n        return {\n          pageName: \"MicroStrategy Embedding SDK Example - \" + currPage.name\n        }\n      })\n    }\n    window.microstrategy.dossier.create({\n        url:\"https://demo.microstrategy.com/MicroStrategyLibrary/app/EC70648611E7A2F962E90080EFD58751/837B57D711E941BF000000806FA1298F\",\n        enableResponsive: true,\n        containerHeight: '1000px',\n        placeholder: container\n    }).then((dossier) => {\n        dossier.registerEventHandler(window.microstrategy.dossier.EventType.ON_PAGE_SWITCHED, updateTitle);\n        window.dossier = dossier\n        window.menu.updateDossier()\n        updateTitle()\n\n    }); \n  }\n\n  render() {\n\n    return (\n      \n      <div className=\"grid-container\" id=\"grid-container\">\n        <div className=\"header-container\"><h2>{this.state.pageName}</h2></div>\n        <Menu></Menu>\n        <Content></Content>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}